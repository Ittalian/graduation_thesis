<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <title>プログラミング基礎 II: 数値計算と演算子</title>
  <meta name="generator" content="amaya 9.0, see http://www.w3.org/Amaya/" />
  <link href="../../stylesheets/bert-proj.css" rel="stylesheet"
  type="text/css" media="projection" />
  <link href="../../stylesheets/slide-screen.css" rel="stylesheet"
  type="text/css" media="screen" />
  <link href="../../stylesheets/slide-proj.css" rel="stylesheet"
  type="text/css" media="projection" />
  <link href="../../stylesheets/slide-print.css" rel="stylesheet"
  type="text/css" media="print" />
  <style type="text/css">
  </style>
</head>

<body>
<h1 style="text-align: center">プログラミング基礎 II</h1>

<h2 style="text-align: center">第四回: 数値計算と演算子</h2>

<h3 style="text-align: center">Martin J. Dürst</h3>

<p style="text-align: center"><a
href="mailto:duerst@it.aoyama.ac.jp">duerst@it.aoyama.ac.jp</a></p>

<p style="text-align: center">O 棟 529号室</p>

<p style="text-align: center">テュールスト マーティン ヤコブ</p>

<p style="text-align: center"><a
href="http://www.sw.it.aoyama.ac.jp/2005/Programming%20Basics%20II/lecture4.html">http://www.sw.it.aoyama.ac.jp/2005/Programming%20Basics%20II/lecture4.html</a></p>

<p class="letterhead"><a href="http://www.aoyama.ac.jp/"><img alt="AGU"
src="../../stylesheets/aoyamalogo.jpg" /></a></p>

<p class="signature">© 2005 <a href="mailto:duerst@it.aoyama.ac.jp">Martin
J. Dürst</a> <a href="http://www.aoyama.ac.jp/">青山学院大学</a></p>

<h1>今週の目的</h1>
<ul>
  <li>数値計算関連の概念が分かる</li>
  <li>数値計算ができる</li>
  <li>数値の入力ができる</li>
</ul>

<h1>先々週からの宿題</h1>

<p>宿題: 沢山の <code>printf</code>
を使って面白い文書・模様を出力するプログラムを作ってください:</p>
<ul>
  <li>コメントを入れて作成者やプログラムの働きを書いて下さい。</li>
  <li>タブ、改行、二重引用符など特殊文字も出力して下さい。</li>
  <li>字下げを守って下さい。</li>
</ul>

<h1>先週の演習題・宿題</h1>

<p>時間内に完了しなかったら宿題としてやって下さい。できるだけ変数を使って下さい。提出不要。</p>
<ul>
  <li>三つの整数の合計 (整数) と平均 (浮動小数点数)
    を計算して出力するプログラムを作ってください。</li>
  <li>プログラム内の代入などの順番がどういう風に影響するのかをよく分かるプログラムを作って下さい。</li>
  <li>与えられた半径の円の周囲の長さと面積、球の表面の面積と体積を計算し、出力するプログラムを作って下さい。(掛け算には「<code>*</code>」を使う。)</li>
  <li>自分の分野によく使われる簡単な計算するプログラムを作って下さい。</li>
</ul>

<h1>C の基本的な算数演算子</h1>
<ul>
  <li><code>+</code>: 足し算</li>
  <li><code>-</code>: 引き算</li>
  <li><code>*</code>: 掛け算</li>
  <li><code>/</code>: 割り算</li>
  <li><code>%</code>: 割り算の余りの計算 (整数のみ)</li>
</ul>

<h1>演算子の種類</h1>
<ul>
  <li>項の数による分類:
    <ul>
      <li>単項演算子: <code>-</code>,<code>++</code>, <code>--</code>
      等</li>
      <li>二項演算子: <code>+</code>, <code>-</code>, <code>*</code>,
        <code>/</code>, <code>%</code> 等</li>
      <li>三項演算子 (C に一種類だけある)</li>
    </ul>
  </li>
  <li>応用分野による分類:
    <ul>
      <li>算数演算子</li>
      <li>代入演算子</li>
      <li>条件演算子</li>
      <li>論理演算子</li>
      <li>ビットごと演算子</li>
      <li>ポインタ関連演算子</li>
    </ul>
  </li>
</ul>

<h1>C の便利な演算子</h1>
<ul>
  <li>代入演算子:<br />
    よくあるプログラムの一部: <code>a = a + 5;</code><br />
    代入演算子の使用: <code>a += 5;</code> (a に 5 を足す)</li>
  <li>インクリメント・デクリメント演算子:<br />
    <code>a = a + 1;</code> → <code>a += 1;</code> → <code>a++;</code><br
    />
    <code>b = b - 1;</code> → <code>b -= 1;</code> → <code>b--;</code><br
    />
  </li>
</ul>

<h1>式とは何なのか</h1>
<ul>
  <li>式は値 (と型) を持つ</li>
  <li>変数と定数も (非常に簡単な) 式である</li>
  <li>複数の式を演算子で結ぶと大きめの式ができる</li>
  <li>丸括弧に囲まれた式も式である</li>
  <li>式の値を計算することは 「式の評価」という</li>
</ul>

<h1>演算と型</h1>

<p>算数演算の場合</p>
<ul>
  <li>整数と整数の式は整数になる<br />
    例: <code>20 + 50</code></li>
  <li>(片方だけでも)
    浮動小数点数を含む式は浮動小数点数になる<br />
    例: <code>20 + 5.5</code>; <code>2.0 + 4</code>; <code>3.5 *
  7.3</code></li>
</ul>

<p>代入の場合</p>
<ul>
  <li>代入されている変数の型に値が合わされる<br />
    例: <code>int i; double d; i = 1.5; d = 2;</code><br />
    (スライドの都合上一行。普通は数行。)<code><br />
    </code></li>
</ul>

<h1>演算子の組み合わせ: 優先度</h1>

<p>ある式に複数の演算子があるとその評価の順番を決める必要がある。</p>

<table border="1">
  <caption>C の演算子の優先度</caption>
  <tbody>
    <tr>
      <td>優先度</td>
      <td>分類</td>
      <td>演算子</td>
      <td>結合の方向</td>
    </tr>
    <tr>
      <td>高い (先に評価)</td>
      <td>単項</td>
      <td><code>-</code>, <code>++</code>, <code>--</code><code></code></td>
      <td>右から左</td>
    </tr>
    <tr>
      <td> </td>
      <td>掛け算系</td>
      <td><code>*</code>, <code>/</code>, <code>%</code></td>
      <td>左から右</td>
    </tr>
    <tr>
      <td> </td>
      <td>足し算系</td>
      <td><code>+</code>, <code>-</code></td>
      <td>左から右</td>
    </tr>
    <tr>
      <td>低い (後で評価)</td>
      <td>代入系</td>
      <td><code>=</code>, <code>+=</code>, <code>*=</code> 等</td>
      <td>右から左</td>
    </tr>
  </tbody>
</table>

<h1>演算子の組み合わせ: 結合の方向</h1>

<p>同じ優先度の演算子で評価の順番を更に決める必要がある。</p>

<p>例: <code>200 / 4 / 2</code>: 25 なのか 100 なのか</p>

<p>答え: <code>200 / 4 / 2</code> は左から結合するので<br />
 <code>(200/4) / 2</code> で 25 になる。</p>

<h1>数値の入力: <code>scanf</code></h1>
<ul>
  <li><code>scanf</code> は <code>printf</code>
    の反対だが、出力は入力より少々複雑</li>
  <li><code>scanf</code> の例 (整数):<br />

    <pre>int i;
printf ("Input an integer: ");
scanf ("%d", &amp;i);</pre>
  </li>
  <li><code>scanf</code> の例 (浮動小数点数):<br />

    <pre>double d;
printf ("Input a double: ");
scanf ("%lf", &amp;d);</pre>
  </li>
  <li>変数の前の <code>&amp;</code> と浮動小数点数の場合の
    <code>%lf</code> に注意</li>
</ul>

<h1>演習題</h1>
<ol>
  <li>先週やった演習題の内二つを <code>scanf</code>
    を使って対話的に使えるようにして下さい。</li>
  <li>同じ式にたくさんの演算子を使って、優先度と結合方法を確かめて下さい。</li>
  <li>代入演算子を使ってみて下さい。</li>
  <li>自分の分野などから複数の数値を入力して、それを使って面白い計算をするプログラムを作って下さい。</li>
</ol>

<p>提出: 再来週の授業 (11月 7日) まで 4
番のプログラムと入出力経過を提出して下さい。</p>

<h1>次回のための準備</h1>
<ul>
  <li>第七章と第八章を読む</li>
  <li>余った演習題を完成し、提出を準備する。</li>
</ul>
</body>
</html>
