<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <title>情報数学 I: 論理回路と命題論理</title>
  <meta name="generator" content="amaya 9.0, see http://www.w3.org/Amaya/" />
  <link href="../../stylesheets/bert-proj.css" rel="stylesheet"
  type="text/css" media="projection" />
  <link href="../../stylesheets/slide-screen.css" rel="stylesheet"
  type="text/css" media="screen" />
  <link href="../../stylesheets/slide-proj.css" rel="stylesheet"
  type="text/css" media="projection" />
  <link href="../../stylesheets/slide-print.css" rel="stylesheet"
  type="text/css" media="print" />
  <style type="text/css">
  </style>
</head>

<body>
<h1 style="text-align: center">情報数学 I</h1>

<h2 style="text-align: center">第四回: 論理回路と命題論理</h2>

<h3 style="text-align: center">Martin J. Dürst</h3>

<p style="text-align: center"><a
href="mailto:duerst@it.aoyama.ac.jp">duerst@it.aoyama.ac.jp</a></p>

<p style="text-align: center">O 棟 529号室</p>

<p style="text-align: center">テュールスト マーティン ヤコブ</p>

<p style="text-align: center"><a
href="http://www.sw.it.aoyama.ac.jp/2005/Math I/lecture4.html">http://www.sw.it.aoyama.ac.jp/2005/Math%20I/lecture4.html</a></p>

<p class="letterhead"><a href="http://www.aoyama.ac.jp/"><img alt="AGU"
src="../../stylesheets/aoyamalogo.jpg" /></a></p>

<p class="signature">© 2005 <a href="mailto:duerst@it.aoyama.ac.jp">Martin
J. Dürst</a> <a href="http://www.aoyama.ac.jp/">青山学院大学</a></p>

<h1>今週の目的</h1>
<ul>
  <li>論理演算子と論理回路の関係が分かる</li>
  <li>論理回路を書ける</li>
  <li>記号論理の目的が分かる</li>
</ul>

<h1>先々週の宿題</h1>

<p>採点完了。来週の火曜日 (10月25日) から O-529
の前に取りに来れる。</p>

<p>多かった問題点:</p>
<ul>
  <li>組み合わせの順番がバラバラ</li>
  <li>記号の書き方が間違っている</li>
  <li>T の代わりに <var>A</var> ∨ ¬<var>A</var> (0 の代わりに 5
    - 5 を書くと同じ)</li>
  <li>多くの式をまず正しく書くが、そのあと更に単純化して
    T になってしまう</li>
  <li>確認がされてなかった</li>
  <li>間違いの写しが多かった</li>
</ul>

<h1>先週の宿題</h1>

<p>サイコロやコインを使って、四変数の真理関数を作る。</p>

<p>その論理関数について次のことをやって下さい。</p>
<ul>
  <li>乗法標準形</li>
  <li>式の操作による単純化</li>
  <li>カルノー図表にやる単純化</li>
</ul>

<p>提出:
提出は必要ないし、成績には影響がないが、正解かどうか分からない場合に提出して、チェックして返す。</p>

<h1>論理回路</h1>

<p>論理関数を実際に計算する回路を作ることができる。</p>

<p>論理演算と電気 (電子) 回路の関係は 1938 年が C. Shannon
修士論文で発表。</p>

<p>論理回路の部品を「ゲート」と呼ぶ。あるゲートの出力を次のゲートの入力につなぐことができる。</p>

<p>実際の回路では出力を元のゲートに戻すことなどもあるが、その場合には論理回路ではなくなる。</p>

<p>論理回路の場合に真と偽の代わり 1 と 0
を使うのが普通。</p>

<h1>論理回路に使う (主な) ゲート</h1>

<table border="1">
  <tbody style="width: 80%">
    <tr>
      <td>NOT ゲート</td>
      <td>AND ゲート</td>
      <td>OR ゲート</td>
    </tr>
    <tr>
      <td> 

        <p> </p>

        <p> </p>
      </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>XOR ゲート</td>
      <td>NAND ゲート</td>
      <td>NOR ゲート</td>
    </tr>
    <tr>
      <td> 

        <p> </p>

        <p> </p>
      </td>
      <td> </td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h1>論理回路の書き方</h1>
<ul>
  <li>入力は左、出力は右にする</li>
  <li>入力と出力の線に変数の名前や式を書く</li>
  <li>線は交差のところつないでいるかどうかはっきりする</li>
  <li>AND と OR
    のゲートの場合交換律と結合律が成り立つため、入力の数を制限する必要がない。NAND
    と NOR にもこの拡張を適用できる。</li>
</ul>

<h1>論理回路の例</h1>

<p>この例は半加算器 (half adder) を実現する
(足し算一ビットごとに二個必要)</p>

<table border="1">
  <tbody>
    <tr>
      <td colspan="2">入力</td>
      <td colspan="2">出力</td>
    </tr>
    <tr>
      <td><var>A</var></td>
      <td><var>B</var></td>
      <td><var>S</var> (sum)</td>
      <td><var>C</var> (carry)</td>
    </tr>
    <tr>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
    </tr>
  </tbody>
</table>

<h1>NAND、NOR の特徴</h1>

<p>NAND だけ (又は NOR だけ)
で全ての論理関数が実現できる。</p>

<p>∧、∨、と ¬
で標準形を使って全ての論理関数が実現できるので、この三つを
NAND で実現できれば証明ができる。</p>

<p>¬ <var>A</var> =</p>

<p><var>A</var> ∧ <var>B</var> =</p>

<p><var>A</var> ∨ <var>B</var> =</p>

<p>NOR の場合には双対原理を使って証明できる。</p>

<h1>記号論理</h1>

<p>(symbolic logic)</p>
<ul>
  <li>論理のモデルを作って、記号演算だけで論理ができるようにする。</li>
  <li>論理にはいくつかの種類がある。例えば:
    <ul>
      <li>二値論理 (真と偽だけ)</li>
      <li>多値論理 (真と偽以外の値がある)</li>
      <li>ファジィ論理 (曖昧さの計算を含む)</li>
      <li>命題論理 (propositional logic, 命題だけを使う)</li>
      <li>述語論理 (predicate logic, 一階 (first order) 等)</li>
      <li>時間など他の要素を取り入れた論理</li>
    </ul>
  </li>
</ul>

<h1>論理に大切な演算子</h1>
<ul>
  <li>「同値である」: equiv, <var>A</var> ↔ <var>B</var>
    (同値、equivalence)<br />
    <var>A</var> と <var>B</var> が同じ値の場合だけ T</li>
  <li>「ならば」: imp, <var>A</var> → <var>B</var>
    (含意、implication)<br />
    <var>A</var> が F で <var>B</var> が T の場合だけ F
    <p>例: 情報数学 I
    に合格するならば三月に沖縄に旅行に行く。</p>
  </li>
</ul>

<table border="1">
  <caption>「同値である」と<br />
  「ならば」の真理表</caption>
  <tbody>
    <tr>
      <td>A</td>
      <td>B</td>
      <td><var>A</var> ↔ <var>B</var></td>
      <td><var>A</var> → <var>B</var></td>
    </tr>
    <tr>
      <td>T</td>
      <td>T</td>
      <td>T</td>
      <td>T</td>
    </tr>
    <tr>
      <td>T</td>
      <td>F</td>
      <td>F</td>
      <td>F</td>
    </tr>
    <tr>
      <td>F</td>
      <td>T</td>
      <td>F</td>
      <td>T</td>
    </tr>
    <tr>
      <td>F</td>
      <td>F</td>
      <td>T</td>
      <td>T</td>
    </tr>
  </tbody>
</table>

<h1>「同値である」と「ならば」の性質</h1>
<ol>
  <li>含意の除去: <var>A</var>→<var>B</var> =
    ¬<var>A</var>∨<var>B</var> = ¬(<var>A</var>∧¬<var>B</var>)</li>
  <li>同値の除去: <var>A</var>↔<var>B</var> =
    (<var>A</var>→<var>B</var>)∧(<var>B</var>→<var>A</var>) =
    (<var>A</var>∧<var>B</var>)∨(¬<var>A</var>∧¬<var>B</var>)</li>
  <li>推移律: ((<var>A</var>→<var>B</var>) ∧
    (<var>B</var>→<var>C</var>)) → (<var>A</var>→<var>C</var>),<br />
    ((<var>A</var>↔<var>B</var>) ∧ (<var>B</var>↔<var>C</var>)) →
    (<var>A</var>↔<var>C</var>)</li>
  <li>背理法: <var>A</var>→¬<var>A</var> = ¬<var>A</var></li>
  <li>対偶: <var>A</var>→<var>B</var> =
  ¬<var>B</var>→¬<var>A</var></li>
  <li>同値の性質: <var>A</var>↔<var>B</var> =
    ¬<var>A</var>↔¬<var>B</var>, ¬(<var>A</var>↔<var>B</var>) =
    (<var>A</var>↔¬<var>B</var>)</li>
  <li>含意の性質: T→<var>A</var> = <var>A</var>, F→<var>A</var> = T,
    <var>A</var>→T = T, <var>A</var>→F = ¬<var>A</var></li>
</ol>

<h1>恒真と恒偽</h1>
<ul>
  <li>常に真の式を「恒真式」と呼ぶ。トートロジー
    (tautology) ともいう。</li>
  <li>常に偽の式を「恒偽式」と呼ぶ。</li>
</ul>

<h1>今週の宿題</h1>

<p>提出: 再来週の金曜日 (11月
4日)、授業のはじめに。形式は A4 一枚。</p>
<dl>
  <dt>第一問:</dt>
    <dd>半加算器を NAND だけ (もしくは NOR だけ)
      で作って書いて下さい。</dd>
  <dt>第二問:</dt>
    <dd>三つの真理値 (真: T、偽: F、未定 (分からない): ?)
      を使う多値論理の基本的な真理表
      (かつ、又は、ではない) を作って下さい。</dd>
</dl>
</body>
</html>
