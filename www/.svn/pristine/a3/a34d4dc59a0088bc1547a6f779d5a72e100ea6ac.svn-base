<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <title>言語理論とコンパイラ: 第一回</title>
  <meta name="generator" content="amaya 9.0, see http://www.w3.org/Amaya/" />
<link href="../../stylesheets/bert-print.css" rel="stylesheet"
  type="text/css" media="projection" />
</head>

<body>
<h1><strong>言語理論とコンパイラ</strong></h1>

<p><strong>第一回</strong>、2005年 4月15日、Martin J. Dürst</p>

<h1>自己紹介</h1>
<ul>
  <li>スイス チューリッヒ生まれ</li>
  <li><a
    href="http://www.unizh.ch/index.en.html">チューリッヒ大学</a>で
    lic.oec.publ.
    (修士相当、情報科学専攻、経営学と日本学副専攻)</li>
  <li>文部省奨学金で来日、<a
    href="http://www.u-tokyo.ac.jp/index_j.html">東京大学</a>で理学博士
    (<a href="http://www.is.s.u-tokyo.ac.jp/">情報科学</a>専攻)</li>
  <li><a
    href="http://www.unizh.ch/index.en.html">チューリッヒ大学</a><a
    href="http://www.ifi.unizh.ch/IFIE.html">情報科学科</a><a
    href="http://www.ifi.unizh.ch/mml/">マルチメディア研究室</a>主任助手</li>
  <li><a href="http://www.keio.ac.jp/">慶應義塾大学</a><a
    href="http://www.sfc.keio.ac.jp/visitors/aboutmag/">政策・メディア研究科</a>特別研究助教授
    (W3C プロジェクト)</li>
  <li><a
    href="http://www.mit.edu/">米マサチューセッツ工科大学</a>客員研究員</li>
  <li><a href="http://www.w3.org/">World Wide Web Consortium</a> (W3C) <a
    href="http://www.w3.org/International/">国際化活動</a>責任者</li>
  <li>今月から<a
    href="http://www.agnes.aoyama.ac.jp/cgi-bin/WebObjects/f921c2aea8/">理工学部</a><a
    href="">情報テクノロジー</a>学科助教授
    (ソフトウェア科学研究室)</li>
</ul>

<h1>授業の位置付け</h1>
<ul>
  <li>3 年前期</li>
  <li>第二科目群 (選択必修)</li>
  <li>ベースになる科目:
    <ul>
      <li>計算機概論</li>
      <li>情報数学</li>
      <li>計算機実習 (プログラミング)</li>
    </ul>
  </li>
</ul>

<h1>授業の内容</h1>

<table border="1">
  <tbody>
    <tr>
      <td></td>
      <th>理論</th>
      <td>コンパイラ</td>
      <td>他の応用</td>
    </tr>
    <tr>
      <td>フロントエンド</td>
      <td>言語理論、オートマトン</td>
      <td>字句解析、構文解析</td>
      <td>regexp, XML</td>
    </tr>
    <tr>
      <td>バックエンド</td>
      <td></td>
      <td>最適化、コード生成</td>
      <td></td>
    </tr>
  </tbody>
</table>
<ul>
  <li>出力より入力に注目、入力の難しさに挑戦</li>
  <li>理論から応用まで様々な表現を使う</li>
</ul>

<h1>コンパイラの役割</h1>

<p>ソフトからハードへの橋渡し</p>

<p>入力: 人間が分かるプログラム
(高級プログラムイング言語、ソース言語、原始言語)</p>

<p>出力: 機械が分かるプログラム
(目的プログラム、実行プログラム)</p>

<h1>コンパイラの仕事の一例</h1>

<p>入力のプログラムの一分:</p>

<p><code>sum += price * 25;</code></p>

<p>出力:</p>
<pre>LOAD   price, R1
LOAD   25, R2
MUL    R1, R2, R1
LOAD   sum, R2
ADD    R1, R2, R2
STORE  R2, sum</pre>

<h1>コンパイラの論理的構造</h1>
<dl>
  <dt>[プリプロセッサ (preprocessor) ]</dt>
  <dt>字句解析 (lexical analysis)</dt>
  <dt>構文解析 (parsing; syntax analysis)</dt>
  <dt>意味解析 (semantic analysis)</dt>
  <dt>最適化 (optimization)</dt>
  <dt>コード生成 (code generation)</dt>
  <dt>[アセンブラ (assembler)]</dt>
  <dt>[リンカ (linker)・ローダ (loader) ]</dt>
</dl>

<h1>コンパイラの種類と関連物</h1>
<ul>
  <li>ワンパス・コンパイラ (one pass compiler)</li>
  <li>x-パス・コンパイラ (x は 2 から 70 (PL/1))</li>
  <li>動的コンパイラ (dynamic/just-in-time (JIT) compiler)</li>
  <li>クロスコンパイラ</li>
  <li>プリプロセッサ</li>
  <li>インタプリタ (通訳系)</li>
</ul>

<h1>字句解析の一例</h1>

<p>入力のプログラムの一分 (文字の列):</p>

<table border="1">
  <tbody>
    <tr>
      <td>s</td>
      <td>u</td>
      <td>m</td>
      <td>&nbsp;</td>
      <td>+</td>
      <td>=</td>
      <td>&nbsp;</td>
      <td>p</td>
      <td>r</td>
      <td>i</td>
      <td>c</td>
      <td>e</td>
      <td>&nbsp;</td>
      <td>*</td>
      <td>&nbsp;</td>
      <td>2</td>
      <td>5</td>
      <td>;</td>
      <td>\n</td>
    </tr>
  </tbody>
</table>

<p>出力 (記号の列):</p>

<p>id("sum"), plusequal, id("price"), asterisk, int(25), semicolon</p>
<ul>
  <li>一つの記号 (符、token) が複数の文字からなる</li>
  <li>記号に属性が付いていることがある</li>
  <li>空白は解析に使われるが出力しない</li>
</ul>

<h1>構文解析の一例</h1>

<p>入力 (記号の列):</p>

<p>id("sum"), plusequal, id("price"), asterisk, int(25), semicolon</p>

<p>出力 (構文木、syntax tree):</p>

<p>statement (+= (sum, * (price, 25))</p>
<pre>


</pre>

<h1>オートマトンの一例</h1>

<p>自動販売機:</p>
<ul>
  <li>入力: 50円玉</li>
  <li>出力: ジュース (150円)</li>
</ul>
<pre>



</pre>

<p>状態遷移図 (state transition diagram)</p>

<h1>言語と文法</h1>
<ul>
  <li>文法は言語の構成規則である</li>
  <li>簡単な文の例 (命令文): eat bread、read books、play music</li>
  <li>文法的には read bread とか play books も正しい</li>
</ul>

<h1>形式言語の文法の一例</h1>
<ul>
  <li>S, A: 非終端記号 (nonterminal symbols, 大文字)</li>
  <li>a, o, y: 終端記号 (terminal symbols, 小文字)</li>
  <li>書き換え規則 (rewriting rules)
    <p>S → a S o</p>
    <p>S → A</p>
    <p>A → y a</p>
  </li>
  <li>S: 初期記号 (initial symbol, start symbol)</li>
</ul>

<p>文法から文の導出 (derivation) の一例:</p>

<p>S → a S o → a a S o o → a a A o o → a a y a o o</p>

<p>S ⇒ a a y a o o</p>
</body>
</html>
