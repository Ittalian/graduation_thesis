<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <title>プログラミング基礎 II: 変数の定義と使い方</title>
  <meta name="generator" content="amaya 9.0, see http://www.w3.org/Amaya/" />
  <link href="../../stylesheets/bert-proj.css" rel="stylesheet"
  type="text/css" media="projection" />
  <link href="../../stylesheets/slide-screen.css" rel="stylesheet"
  type="text/css" media="screen" />
  <link href="../../stylesheets/slide-proj.css" rel="stylesheet"
  type="text/css" media="projection" />
  <link href="../../stylesheets/slide-print.css" rel="stylesheet"
  type="text/css" media="print" />
  <style type="text/css">
  </style>
</head>

<body>
<h1 style="text-align: center">プログラミング基礎 II</h1>

<h2 style="text-align: center">第三回: 変数の定義と使い方</h2>

<h3 style="text-align: center">Martin J. Dürst</h3>

<p style="text-align: center"><a
href="mailto:duerst@it.aoyama.ac.jp">duerst@it.aoyama.ac.jp</a></p>

<p style="text-align: center">O 棟 529号室</p>

<p style="text-align: center">テュールスト マーティン ヤコブ</p>

<p style="text-align: center"><a
href="http://www.sw.it.aoyama.ac.jp/2005/Programming%20Basics%20II/lecture3.html">http://www.sw.it.aoyama.ac.jp/2005/Programming%20Basics%20II/lecture3.html</a></p>

<p class="letterhead"><a href="http://www.aoyama.ac.jp/"><img alt="AGU"
src="../../stylesheets/aoyamalogo.jpg" /></a></p>

<p class="signature">© 2005 <a href="mailto:duerst@it.aoyama.ac.jp">Martin
J. Dürst</a> <a href="http://www.aoyama.ac.jp/">青山学院大学</a></p>

<h1>今週の目的</h1>
<ul>
  <li>変数の定義と使用ができる</li>
  <li>型を三つ使い分けられる</li>
</ul>

<h1>先週からの宿題</h1>

<p>宿題: 沢山の <code>printf</code>
を使って面白い文書・模様を出力するプログラムを作ってください:</p>
<ul>
  <li>コメントを入れて作成者やプログラムの働きを書いて下さい。</li>
  <li>タブ、改行、二重引用符など特殊文字も出力して下さい。</li>
  <li>字下げを守って下さい。</li>
</ul>

<h1>変数とは</h1>
<ul>
  <li>データのために計算機に用意されているメモリ</li>
  <li>名前が付いている「箱」</li>
  <li>大きさと (扱えるデータの) 種類が決められている</li>
  <li>箱に値 (データ) を入れられる (代入できる)</li>
  <li>変数の値は計算などに使える</li>
</ul>

<h1>変数の定義</h1>
<ul>
  <li>C の場合、変数を使う前に用意する必要がある</li>
  <li>それを「変数の定義」という</li>
  <li>定義は main 関数などの最初に行う</li>
  <li>定義の時に変数の型 (種類)
    を宣言しなければいけない</li>
</ul>

<h1>C の主な型</h1>
<ul>
  <li><code>int</code>: 整数型 (integer)、-(2<sup>31</sup>) ~
    2<sup>31</sup>-1 (おおよそ -2·10<sup>9</sup> ~ 2·10<sup>9</sup>)<br
    />
    整数の計算に使う</li>
  <li><code>char</code>: 文字型 (character)、-128 ~ 127 (漢字などは
    char 一個に納まれない)<br />
    主に文字列に使う</li>
  <li><code>double</code>: (倍精度) 浮動小数点数 (double precision
    floating point number)<br />
    小数部がある計算に使う</li>
  <li>他に <code>short</code>、<code>long</code>、と <code>float</code>
    がある</li>
</ul>

<h1>変数の定義の構文と例</h1>

<p>型は変数名の前に書く:</p>

<p><code>int a;</code></p>

<p><code>char c;</code></p>

<p><code>double d;</code></p>

<p>同じ型の変数は複数同時に定義できる:</p>

<p><code>double d, e, f;</code></p>

<h1>変数の名前の選び方</h1>
<ul>
  <li>文法的制約:
    <ul>
      <li>A-Z, a-z で始まる</li>
      <li>その後は数字 (0-9) と「_」も使える</li>
      <li>大文字と小文字は区別される</li>
    </ul>
  </li>
  <li>名前をできるだけ分かりやすいようにする:
    <ul>
      <li>英語が好ましいがローマ字日本語でも良い</li>
      <li>例:<br />
        <code>int total; /* 合計 */</code><code><br />
        double average; /* 平均 */</code></li>
    </ul>
  </li>
</ul>

<h1>代入とは</h1>
<ul>
  <li>変数に値を与える (箱にデータを入れる)
    ことを「代入」という</li>
  <li>前に変数にあった値が消える</li>
  <li>値を計算など (代入を含めて) 使うと値が残る</li>
  <li>代入の記号としては「<code>=</code>」が使われる</li>
  <li>代入は右から左へと行われる</li>
  <li>右側が完全に計算されているから代入が行われる</li>
  <li>代入を含めてプログラムは上から下の順に実行される</li>
</ul>

<h1>代入の例</h1>

<p><code>total = 0;</code></p>

<p><code>total = 3 + 5;</code></p>

<p><code>total = total + 8;</code></p>

<p><code>average = total;</code></p>

<p><code>average = total / 3.0;</code></p>

<h1>変数: 数学とプログラミングの違い</h1>
<ul>
  <li>数学に数は無限にあるが、計算機の場合には最小・最大がある</li>
  <li>プログラムの変数は (たとえゴミであっても)
    常に値を持つ</li>
  <li>数学の = は｢等しい」であるが、C のプログラムの
    <code>=</code> は代入である</li>
</ul>

<h1>変数からの出力: <code>printf</code>、その二</h1>

<p>整数の例:</p>

<p><code>printf ("合計は %d である。\n", total);</code></p>

<p>浮動小数点数の例:</p>

<p><code>printf ("平均は %f である。\n", average);</code></p>

<p>組み合わせの例:</p>

<p><code>printf ("合計: %d、平均: %f。\n", total, average);</code></p>

<p>データの数と順番と型が合わないといけない。</p>

<h1>初期化</h1>

<p>初期化は変数の定義と代入の組み合わせみたいなもの</p>

<p><code>int a1, a2 = 20, a3 = a2 + 20;</code></p>

<h1>演習題</h1>

<p>時間内に完了しなかったら宿題としてやって下さい。できるだけ変数を使って下さい。提出不要。</p>
<ul>
  <li>三つの整数の合計 (整数) と平均 (浮動小数点数)
    を計算して出力するプログラムを作ってください。</li>
  <li>プログラム内の代入などの順番がどういう風に影響するのかをよく分かるプログラムを作って下さい。</li>
  <li>与えられた半径の円の周囲の長さと面積、球の表面の面積と体積を計算し、出力するプログラムを作って下さい。(掛け算には「<code>*</code>」を使う。)</li>
  <li>自分の分野によく使われる簡単な計算するプログラムを作って下さい。</li>
</ul>

<h1>次回のための準備</h1>
<ul>
  <li>第六章 (pp. 69-74) をよく読む</li>
  <li>余った演習題を完成する</li>
</ul>
</body>
</html>
