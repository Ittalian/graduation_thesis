<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <title>プログラミング基礎 II:
  関数の作り方と使い方</title>
  <meta name="generator" content="amaya 9.0, see http://www.w3.org/Amaya/" />
  <link href="../../stylesheets/bert-proj.css" rel="stylesheet"
  type="text/css" media="projection" />
  <link href="../../stylesheets/slide-screen.css" rel="stylesheet"
  type="text/css" media="screen" />
  <link href="../../stylesheets/slide-proj.css" rel="stylesheet"
  type="text/css" media="projection" />
  <link href="../../stylesheets/slide-print.css" rel="stylesheet"
  type="text/css" media="print" />
  <style type="text/css">
  </style>
</head>

<body>
<h1 style="text-align: center">プログラミング基礎 II</h1>

<h2 style="text-align: center">第八回: <a
href="lecture8.html">関数の作り方と使い方</a></h2>

<h3 style="text-align: center">Martin J. Dürst</h3>

<p style="text-align: center"><a
href="mailto:duerst@it.aoyama.ac.jp">duerst@it.aoyama.ac.jp</a></p>

<p style="text-align: center">O 棟 529号室</p>

<p style="text-align: center">テュールスト マーティン ヤコブ</p>

<p style="text-align: center"><a
href="http://www.sw.it.aoyama.ac.jp/2005/Programming%20Basics%20II/lecture8.html">http://www.sw.it.aoyama.ac.jp/2005/Programming%20Basics%20II/lecture8.html</a></p>

<p class="letterhead"><a href="http://www.aoyama.ac.jp/"><img alt="AGU"
src="../../stylesheets/aoyamalogo.jpg" /></a></p>

<p class="signature">© 2005 <a href="mailto:duerst@it.aoyama.ac.jp">Martin
J. Dürst</a> <a href="http://www.aoyama.ac.jp/">青山学院大学</a></p>

<h1>先週の演習題</h1>
<ol>
  <li>1 から 20
    の整数の半径の円の面積を計算するプログラムを作りなさい。</li>
  <li>先週のゴミ出しのプログラムをある月の一日の曜日だけを指定して、プログラムがその月の全ての日のゴミ出しを計算するように改造してください
    (月が全て 31日間の想定で結構です)。</li>
  <li>先週のゴミ出しのプログラムをユーザが何回も入力できる、しかも止めたいときには止める様に変更してください。</li>
  <li>10~20 かける 10~20 の表を作って下さい。(ヒント:
    <code>printf</code> で <code>%d</code> の代わりに <code>%3d</code>
    を使うと数字が揃う)</li>
  <li>ある入力した数字が素数かどうかを判断する<a
    href="prog/prime.c">プログラム</a>を作って下さい。さらに、1
    から n までを素数かどうかの<a
    href="prog/primes.c">プログラム</a>に変更してください。</li>
  <li>自分の分野や身の回りの問題で繰り返しと条件文を使った面白いプログラムを作って下さい。</li>
</ol>

<h1>今までの関数の使い方</h1>

<p>自分で書いた関数:</p>
<ul>
  <li><code>main</code> 関数</li>
</ul>

<p>使った関数:</p>
<ul>
  <li>入出力関係: <code>printf</code>, <code>scanf</code>,
    <code>fgets</code>, など</li>
  <li>文字列関係: <code>strlen</code>, <code>strcmp</code>, など</li>
</ul>

<h1>関数の目的、役割</h1>
<ul>
  <li>プログラムの処理の明確な構造化</li>
  <li>よく使う処理の部品化</li>
  <li>プログラムの読みやすさの向上</li>
</ul>

<h1>関数の作り方</h1>
<pre>double① pow② (double③ a④, int③ b④)
{
    int n;⑥
    double ret = 1;
    for (n=0; n&lt;b; n++) {
        ret *= a;
    }
    return ret;⑤
}</pre>
<ol>
  <li>戻り値の型</li>
  <li>関数の名前</li>
  <li>引数の型</li>
  <li>引数の名前</li>
  <li><code>return</code> 文</li>
  <li>関数の本文</li>
</ol>

<h1>関数とのデータのやり取り</h1>

<p>引数: 関数へ値を引き渡す (0 個 (<code>void</code>) 以上)</p>

<p>戻り値: 関数から値を戻す (0 個 (<code>void</code>) 又は 1
個)</p>

<p>グローバル変数:
プログラム全体に使える変数。役割分担などはっきりしないため、避けた方がよい。</p>

<h1>関数の型</h1>

<p>関数の型は次のもので定まる:</p>
<ul>
  <li>引数の数とそれそれの引数の型</li>
  <li>戻り値の型</li>
</ul>

<p>例外: <code>printf</code> と <code>scanf</code>
の場合には引数の数も第二引数以降の型も決っていない</p>

<h1>関数の宣言と定義</h1>
<ul>
  <li>関数はどの順番で書いてもいいが、コンパイラがある関数の型を知らないところでその関数を使うと引数の引き渡しがうまく行かないことが多い</li>
  <li>関数の型だけを前もって宣言できる:<br />
    <code>double pow (double a, int b);</code><br />
    <code>double① pow② (double③ a④, int③ b④);⑦</code><br />
    (7. セミコロン)</li>
  <li>関数の宣言だけを別のファイル (<code>.h</code>
    ファイル) に入れることがよくある</li>
</ul>

<h1>関数を作るときの注意点</h1>
<ul>
  <li>関数側と使う側を混乱させないように片側づつ考える</li>
  <li>引数の数と型、戻り値の型に注意すること</li>
  <li>使うところでコンパイラが宣言や定義を見えるようにする</li>
</ul>

<h1>今週の演習題</h1>
<ol>
  <li>簡単な関数 (例えば消費税の計算、利子の計算、BMI
    の計算、素数の判断) を一つ作って、先生や TA
    に見せてからその関数を使う <code>main</code>
    関数を作って下さい。</li>
  <li>先週の演習問題 2 及び 3
    の一日分のゴミ出しの判断を関数にして、二つのプログラムを書き直してください。</li>
  <li>今までの演習問題のプログラムを調査して、関数に出来るところを見つけて関数化する。</li>
  <li>発展問題: 二つの 1
    以上の整数の最大公約数を計算する関数
    (とこれを使うプログラム) を作る。a と b
    の最大公約数 gcd(a, b) は次のように計算できる: a==b
    の時 a と b が最大公約数; a&gt;b の時 gcd(a, b) は gcd (a-b,
    b) と同じ。a&lt;b の時に gcd(a, b) は gcd(b, a)
    と同じ。この説明に沿って関数を作って下さい。関数が自分を呼ぶことを気にしないでください。</li>
  <li>発展問題:
    複数のプログラムに同じ関数を書くのが無駄な面がある。一日分のゴミ出しの判断の関数を別のファイル
    (例えば <code>gomi.c</code>) に移して、その宣言を例えば
    <code>gomi.h</code> に入れて、今までのプログラムで
    <code>#include "gomi.h"</code>
    で引用して下さい。コンパイルの場合に複数の
    <code>.c</code> ファイルを書いてもよい (<code>.h</code>
    ファイルは書かなくてよい)</li>
</ol>

<h1>次回のための準備</h1>
<ul>
  <li>第十一章 (pp. 146-157) を読む</li>
  <li>余った演習題を完成する</li>
  <li>ミニテスト (約 30 分) への準備</li>
</ul>
</body>
</html>
