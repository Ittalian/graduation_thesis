<rdf:RDF
    xmlns:dcterms="http://purl.org/dc/terms/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:dc="http://purl.org/dc/elements/1.1/" >
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1">
    <dc:description>継承</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-1">
    <dc:description>継承とは</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-2">
    <dc:description>継承はオブジェクト指向の主な原則の一つである。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-3">
    <dc:description>再利用性を高める。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-4">
    <dc:description>クラス間の共通性を共有するためのメカニズム。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-5">
    <dc:description>共通性はスーパクラスと呼ばれる親クラスに格納される。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-6">
    <dc:description>共通性はサブクラスと呼ばれる子クラス間で共有される。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-7">
    <dc:description>汎化と特化</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-8">
    <dc:description>継承の定義</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-9">
    <dc:description>Java では &lt;span class="keyword"&gt;extends&lt;/span&gt; を使って継承する。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-10">
    <dc:description>サブクラスがスーパクラスを拡張すると言われる。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-11">
    <dc:description>クラスの定義ではっきりとスーパクラスを特定していないならスーパクラスは Object クラスである。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-12">
    <dc:description>変数と継承</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-13">
    <dc:description>変数が generic 型として宣言され、特定の型のオブジェクトを割り当てられことができる。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-14">
    <dc:description>Policy 型として宣言された変数は Policy のサブクラスのインスタンスを割り当てることができる。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-15">
    <dc:description>継承されたとは</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-16">
    <dc:description>一般的に全てのサブクラスはスーパクラスからデータ、振る舞いを継承する。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-17">
    <dc:description>Java で考えた場合に、サブクラスがフィールド（インスタンス変数）、メソッドを継承するということである。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-18">
    <dc:description>継承するフィールド</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-19">
    <dc:description>スーパクラスから全てのフィールドがサブクラスに継承される。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-20">
    <dc:description>継承は階層を可能な限りたどる。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-21">
    <dc:description>継承するメソッド</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-22">
    <dc:description>スーパクラスから全てのメソッドがサブクラスに継承される。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-1-23">
    <dc:description>継承は階層を可能な限りたどる。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-2">
    <dc:description>メソッド探索</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-2-1">
    <dc:description>メソッド探索はメッセージを受け取ったオブジェクトのクラス内で始まる。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-2-2">
    <dc:description>メソッドが見つからなかったらスーパクラスで探索を続ける。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-3">
    <dc:description>this と super</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-3-1">
    <dc:description>受信側オブジェクトを指定するための予約語である。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-3-2">
    <dc:description>メソッド探索始めるときに違いがある。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-3-3">
    <dc:description>this</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-3-4">
    <dc:description>探索が受信側のオブジェクトクラスで始まる。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-3-5">
    <dc:description>super</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-3-6">
    <dc:description>探索がメソッドが定義されているクラスのスーパクラスで始まる。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-3-7">
    <dc:description>例</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-4">
    <dc:description>オーバライディング</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-4-1">
    <dc:description>メソッドのオーバライディング</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-4-2">
    <dc:description>スーパクラスにあるメソッドと同じメソッドをクラスで定義していることを、メソッドをオーバライディングするという。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-4-3">
    <dc:description>メソッドシグネチャが一致しなくてはならない。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-4-4">
    <dc:description>コンストラクタのオーバライディング</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-4-5">
    <dc:description>メソッドのオーバライディングと同様に、コンストラクタに特定のルールを適用する。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-4-6">
    <dc:description>コンストラクタ内の最初の行は this( parameters ) か super( parameters ) でなくてはならない。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-4-7">
    <dc:description>これがオブジェクトを生成する Object クラスのコンストラクタとなる。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-4-8">
    <dc:description>呼び出しがプログラムされていないと、引数なしの super() が呼び出される。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-4-9">
    <dc:description>スーパクラスに引数なしのコンストラクタがないなら、エラーになる。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture4.html#lec4-4-10">
    <dc:description>コンストラクタのオーバライディング例</dc:description>
  </rdf:Description>
</rdf:RDF>
