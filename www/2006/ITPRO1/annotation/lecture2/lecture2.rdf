<rdf:RDF
    xmlns:dcterms="http://purl.org/dc/terms/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:dc="http://purl.org/dc/elements/1.1/" >
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-1">
    <dc:description>オブジェクト指向とは？</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-1-1">
    <dc:description>現実世界のモデリングをソフトウェアのモデリングに適用した技術</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-1-2">
    <dc:description>オブジェクトとオブジェクト間のインタラクションを通じて実現される。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-1-3">
    <dc:description>再利用可能な部品としてソフトウェアを考える一つの方法</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-1-4">
    <dc:description>あらゆるオブジェクトはそれ自身が部品であり異なる文脈で再利用可能である。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-2">
    <dc:description>なぜオブジェクト指向のシステムを使うのか？</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-2-1">
    <dc:description>オブジェクト指向システムの利点</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-2-2">
    <dc:description>柔軟性</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-2-3">
    <dc:description>オブジェクトの再利用</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-2-4">
    <dc:description>より高度な品質管理</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-2-5">
    <dc:description>メンテナンスコストの削減</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-3">
    <dc:description>オブジェクト指向ソフトウェア開発</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-3-1">
    <dc:description>ソフトウェアはオブジェクトによりモデル化</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-3-2">
    <dc:description>ソフトウェアのオブジェクトが実世界のオブジェクトを示している。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-3-3">
    <dc:description>各オブジェクトが所有しているもの</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-3-4">
    <dc:description>状態 ex データ</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-3-5">
    <dc:description>行動 ex メソッド/関数</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-4">
    <dc:description>オブジェクト指向ソフトウェア</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-4-1">
    <dc:description>オブジェクト指向におけるソフトウェア開発とは</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-4-2">
    <dc:description>"オブジェクト"を定義すること</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-4-3">
    <dc:description>"個々のオブジェクトの特徴"を定義すること</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-4-4">
    <dc:description>"オブジェクト間の関係"を定義すること</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-4-5">
    <dc:description>メッセージを送りあいによるオブジェクトの相互作用</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-4-6">
    <dc:description>オブジェクト指向に相互作用できるオブジェクトがシステムの構成素である。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-5">
    <dc:description>オブジェクトと疎結合</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-5-1">
    <dc:description>オブジェクトのデータを変更しても外部への振る舞いは変わらない。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-5-2">
    <dc:description>オブジェクトの外部インタフェースは常に同じである。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-5-3">
    <dc:description>オブジェクト間の疎結合を促進する。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-6">
    <dc:description>オブジェクト</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-6-1">
    <dc:description>すべてのオブジェクトは状態（state）と振る舞い（behavior）を持っている。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-6-2">
    <dc:description>状態（state）はオブジェクトが何を知っているのか、なにを含んでいるのかというようなデータを表す。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-6-3">
    <dc:description>振る舞い（behavior）はオブジェクトが何を処理できるかを表す。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-7">
    <dc:description>オブジェクトの状態と振る舞い</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-7-1">
    <dc:description>Person オブジェクト</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-7-2">
    <dc:description>状態（state）: age, name, children</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-7-3">
    <dc:description>振る舞い（behavior）: addChild, getAge, setAge</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-8">
    <dc:description>オブジェクト間のやりとり</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-8-1">
    <dc:description>オブジェクトは互いにメッセージを送信することで交信する。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-8-2">
    <dc:description>オブジェクト間のやりとりがオブジェクト指向のシステムを作り出す。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-9">
    <dc:description>メッセージ</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-9-1">
    <dc:description>メッセージやりとりについて2つの重要なキーワードがある。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-9-2">
    <dc:description>メッセージセンダ</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-9-3">
    <dc:description>メッセージレシーバ</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-9-4">
    <dc:description>メッセージは引数を持つこともある。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-10">
    <dc:description>メソッド</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-10-1">
    <dc:description>メソッドはメッセージの具体的な実装である。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-10-2">
    <dc:description>メソッドはメッセージに対するオブジェクトの反応を表す。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-11">
    <dc:description>オブジェクトの public プロトコル</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-11-1">
    <dc:description>public プロトコルとはオブジェクトに送れるメッセージの集合である。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-11-2">
    <dc:description>オブジェクト自身に送れるメッセージは含まない。それらは private である。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-12">
    <dc:description>フィールド</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-12-1">
    <dc:description>フィールドはオブジェクトの特徴を表す。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-12-2">
    <dc:description>フィールは属性、インスタンス変数としても知られている。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-13">
    <dc:description>カプセル化</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-13-1">
    <dc:description>オブジェクトは public プロトコルの裏にメッセージの実装を隠す。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-13-2">
    <dc:description>オブジェクト内部の実装はそのオブジェクトだけがアクセスできる。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-13-3">
    <dc:description>カプセル化は実装の隠蔽としても知られている。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-14">
    <dc:description>クラス</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-14-1">
    <dc:description>オブジェクトを作るための工場（設計図）</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-14-2">
    <dc:description>同種の状態と振る舞いを記述するオブジェクトのためのテンプレート</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-14-3">
    <dc:description>オブジェクトのコードレポジトリ</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-14-4">
    <dc:description>クラスはオブジェクトとその型を定義する。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-15">
    <dc:description>インスタンス</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-15-1">
    <dc:description>あらゆるオブジェクトはいくつかのクラスのインスタンスである。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-15-2">
    <dc:description>同じクラスの全てのインスタンスは同じプロトコルを持ち、クラスで定義された同じフィールドとメソッドを持つ。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-16">
    <dc:description>継承</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-16-1">
    <dc:description>いくつかのクラスは共通性がある。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-16-2">
    <dc:description>例えば 住宅保険　HomePolicy,自動車保険 AutoPolicy,生命保険 LifePolicy クラスは保険に共通な同じ状態と振る舞いを持っているかもしれない。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-16-3">
    <dc:description>それぞれのクラスで共通性を繰り返す代わりに、共通な部分を共通の場所に抽出する。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-16-4">
    <dc:description>これらの共通性はスーパークラスに格納される。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-16-5">
    <dc:description>それぞれのサブクラスはそのスーパクラスから状態と振る舞いを継承する。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-16-6">
    <dc:description>なぜ継承するのか？</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-16-7">
    <dc:description>継承は実世界のモデルを表現</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-16-8">
    <dc:description>あるオブジェクトが他のオブジェクトの特別なケース</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-16-9">
    <dc:description>高い再利用性と拡張性</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-16-10">
    <dc:description>同じデータと振る舞いが異なる型のオブジェクトで共有される。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-16-11">
    <dc:description>それらのオブジェクトに共通する新たなデータと振る舞いを加えるのが簡単になる。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-17">
    <dc:description>ポリモルフィズム</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-17-1">
    <dc:description>ポリモルフィズムとは</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-17-2">
    <dc:description>異なるオブジェクトが異なる方法で同じメッセージに反応する。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-17-3">
    <dc:description>例えば、話し方として犬が吠えるのと猫が鳴くのが異なるようなことと同じです。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-17-4">
    <dc:description>オーバライディング</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-17-5">
    <dc:description>オーバライディングはスーパクラスと同じメソッドを異なるコードで実装することである。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-17-6">
    <dc:description>Object クラスの toString() メソッドはオーバライディングされたメソッドの一例である。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-17-7">
    <dc:description>オーバライディング例</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-17-8">
    <dc:description>Animal クラスを考える。サブクラスとして Dog と Cat クラスがあり、全ての Animal オブジェクトは talk() という振る舞いがある。</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-18">
    <dc:description>動的結合</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="http://www.sw.it.aoyama.ac.jp/2006/ITPRO1/lecture2.html#lec2-18-1">
    <dc:description>動的結合は実行時のメソッドの結合を表す。</dc:description>
  </rdf:Description>
</rdf:RDF>
